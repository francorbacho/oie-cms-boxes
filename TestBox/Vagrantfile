# Fichero que crea una máquina virtual con un CMS desplegado
# "todo en uno". Requiere un fichero de configuración (.env) con
# información básica.
#
# Olimpiada Informática Española (OIE)

require 'fileutils'
require 'securerandom'

CONFIG_FILE = ".env"

# Imagen base: Ubunutu 18.04. Fijamos una versión concreta probada
# aunque invalide actualizaciones
# Puedes probar con una versión más moderna, siempre y cuando
# mantengas bionic64
# Historia de versiones: https://app.vagrantup.com/ubuntu/boxes/bionic64
VM_BASE_IMAGE_NAME = "ubuntu/bionic64"
VM_BASE_IMAGE_VERSION = "20210916.0.0"


# Comprobamos si existe el fichero de configuración. En la práctica
# solo se necesita en la primera ejecución cuando se monta la MV. Si no existe, se copia desde
# el template y se indica.
if !File.exists?(CONFIG_FILE) 
    FileUtils.cp("#{CONFIG_FILE}.template", CONFIG_FILE)
    print "** ERROR **: Fichero de configuración del desplegado (#{CONFIG_FILE}) no encontrado.\n"
    print "Hemos creado uno con el contenido por defecto. Adáptalo y vuelve a ejecutar vagrant up.\n"
    print "Terminamos.\n"
    raise "Fichero (#{CONFIG_FILE}) no encontrado."
end

unless Vagrant.has_plugin?("vagrant-env")
    print "** ERROR **: Plugin vagrant-env no encontrado. Por favor instálalo con\n\n"
    print "$ vagrant plugin install vagrant-env\n\n"
    print "Terminamos.\n"
    raise 'plugin vagrant-env no instalado'
end

# Elegimos valores aleatorios para provisioning de contraseña de la BBDD
# y secret_key de CMS (ambos sobreescribibles en el .env)
DB_PASS_CANDIDATE=SecureRandom.hex(16)
SECRET_KEY_CANDIDATE=SecureRandom.hex(16)

Vagrant.configure("2") do |config|

    config.env.enable
    
    IP = ENV["IP"] || "192.168.10.11"

    config.vm.box = VM_BASE_IMAGE_NAME
    config.vm.box_version = VM_BASE_IMAGE_VERSION

    config.vm.hostname = ENV["hostname"] || "cmsOIE"

    # Configuración de la red
    config.vm.network "private_network", ip: IP

    # Personalización de la máquina virtual en VirtualBox
    config.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.memory = ENV["ram"] || 4096
        vb.cpus = ENV["cpus"] || 2
    end

    # Copiamos a la máquina virtual los ficheros auxiliares que necesitan
    # los scripts de instalación
    config.vm.provision "file", source: "provisioning/files", destination: "~/provision-files"
    config.vm.provision "file", source: "../provisioning/files", destination: "~/provision-files"
    if ENV["CONCURSO_PRUEBA"]
        config.vm.provision "file", source: "../datos-simulacro", destination: "~/datos-simulacro"
    end

    # Ejecutamos los scripts de instalación por orden
    # Juntamos los específicos del directorio con los generales y los ordenamos
    # por nombre de fichero
    Dir.glob("../provisioning/scripts/*.sh").concat(Dir.glob("provisioning/scripts/*.sh")).sort { |a,b| File.basename(a)<=>File.basename(b)}.each do |script|
        config.vm.provision "shell", path: script, env: { 
            DEFAULT_USER: "vagrant",
            CONFIG_FILE: "/vagrant/#{CONFIG_FILE}",
            DB_PASS_ALTERNATIVE: DB_PASS_CANDIDATE,
            SECRET_KEY_ALTERNATIVE: SECRET_KEY_CANDIDATE,
            OS_USER_PASSWORD: ENV["OS_USER_PASSWORD"],
            NODE_NAME: "localhost",
            NODE_IP: "#{IP}",
            NODE_INFO: "/home/vagrant/provision-files/nodeInfo.json",
            MAIN_NODE_NAME: "localhost",
            CONTEST_NODE_NAME: "localhost",
            ADMIN_NODE_NAME: "localhost",
            WORKER_NODE_NAME: "localhost",
            NUM_RANKINGS: "1",
            PATH_RANKING_1: "/clasif"
         }
    end

end
